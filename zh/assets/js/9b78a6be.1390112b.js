(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[79440],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(t),d=a,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,s(s({ref:n},c),{},{components:t})):r.createElement(f,s({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},57129:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},metadata:function(){return i},toc:function(){return u},default:function(){return c}});var r=t(22122),a=t(19756),o=(t(67294),t(3905)),s={title:"\u5b58\u50a8\u7ba1\u7406"},i={unversionedId:"end-user/traits/storage",id:"end-user/traits/storage",isDocsHomePage:!1,title:"\u5b58\u50a8\u7ba1\u7406",description:"\u672c\u5c0f\u8282\u4f1a\u4ecb\u7ecd\uff0c\u5982\u4f55\u4e3a\u5e94\u7528\u90e8\u7f72\u8ba1\u5212\u7684\u4e00\u4e2a\u5f85\u4ea4\u4ed8\u7ec4\u4ef6\uff0c\u7ba1\u7406\u5b58\u50a8\u3002\u6211\u4eec\u4f7f\u7528\u8fd0\u7ef4\u7279\u5f81\u91cc\u7684 storage \u6765\u5b8c\u6210\u5f00\u53d1\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/end-user/traits/storage.md",sourceDirName:"end-user/traits",slug:"/end-user/traits/storage",permalink:"/zh/docs/next/end-user/traits/storage",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/end-user/traits/storage.md",version:"current",lastUpdatedBy:"Tianxin Dong",lastUpdatedAt:1642586648,formattedLastUpdatedAt:"2022/1/19",frontMatter:{title:"\u5b58\u50a8\u7ba1\u7406"},sidebar:"docs",previous:{title:"\u7ed9\u5e94\u7528\u914d\u7f6e\u8bbf\u95ee\u7f51\u5173",permalink:"/zh/docs/next/end-user/traits/ingress"},next:{title:"\u7070\u5ea6\u53d1\u5e03\u548c\u6269\u7f29\u5bb9",permalink:"/zh/docs/next/end-user/traits/rollout"}},u=[{value:"\u5982\u4f55\u4f7f\u7528",id:"\u5982\u4f55\u4f7f\u7528",children:[]},{value:"\u5b57\u6bb5\u8bf4\u660e",id:"\u5b57\u6bb5\u8bf4\u660e",children:[]}],l={toc:u};function c(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u672c\u5c0f\u8282\u4f1a\u4ecb\u7ecd\uff0c\u5982\u4f55\u4e3a\u5e94\u7528\u90e8\u7f72\u8ba1\u5212\u7684\u4e00\u4e2a\u5f85\u4ea4\u4ed8\u7ec4\u4ef6\uff0c\u7ba1\u7406\u5b58\u50a8\u3002\u6211\u4eec\u4f7f\u7528\u8fd0\u7ef4\u7279\u5f81\u91cc\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"storage")," \u6765\u5b8c\u6210\u5f00\u53d1\u3002"),(0,o.kt)("h2",{id:"\u5982\u4f55\u4f7f\u7528"},"\u5982\u4f55\u4f7f\u7528"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"storage")," \u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u521b\u5efa\u5e76\u7ba1\u7406 ",(0,o.kt)("inlineCode",{parentName:"p"},"pvc"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"emptyDir"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"secret"),"\u3001",(0,o.kt)("inlineCode",{parentName:"p"},"configMap")," \u7b49\u7c7b\u578b\u7684\u5b58\u50a8\u3002\u5bf9\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"secret")," \u53ca ",(0,o.kt)("inlineCode",{parentName:"p"},"configMap")," \u7c7b\u7684\u5b58\u50a8\uff0c\u8fd8\u652f\u6301\u7ed1\u5b9a\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"env")," \u5f53\u4e2d\u3002"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u5982\u679c\u4f60\u4e0d\u5e0c\u671b\u81ea\u52a8\u521b\u5efa\u8fd9\u4e9b\u8d44\u6e90\uff0c\u53ef\u4ee5\u5c06 ",(0,o.kt)("inlineCode",{parentName:"p"},"mountOnly")," \u5b57\u6bb5\u8bbe\u7f6e\u4e3a true\u3002")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# sample.yaml\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: storage-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        ports:\n          - port: 8000\n      traits:\n        - type: storage\n          properties:\n            # PVC type storage\n            pvc:\n              - name: test1\n                mountPath: /test/mount/pvc\n            # EmptyDir type storage\n            emptyDir:\n              - name: test1\n                mountPath: /test/mount/emptydir\n            # ConfigMap type storage\n            configMap:\n              - name: test1\n                mountPath: /test/mount/cm\n                # Mount ConfigMap to Env\n                mountToEnv:\n                  envName: TEST_ENV\n                  configMapKey: key1\n                data:\n                  key1: value1\n                  key2: value2\n            # Secret type storage\n            secret:\n              - name: test1\n                mountPath: /test/mount/secret\n                # Mount Secret to Env\n                mountToEnv:\n                  envName: TEST_SECRET\n                  secretKey: key1\n                data:\n                  key1: dmFsdWUx\n                  key2: dmFsdWUy\n\n")),(0,o.kt)("h2",{id:"\u5b57\u6bb5\u8bf4\u660e"},"\u5b57\u6bb5\u8bf4\u660e"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ vela show storage\n# Properties\n\n## pvc\n+------------------+-------------+---------------------------------+----------+------------+\n|       NAME       | DESCRIPTION |              TYPE               | REQUIRED |  DEFAULT   |\n+------------------+-------------+---------------------------------+----------+------------+\n| name             |             | string                          | true     |            |\n| volumeMode       |             | string                          | true     | Filesystem |\n| mountPath        |             | string                          | true     |            |\n| mountOnly        |             | bool                            | true     | false      |\n| accessModes      |             | [...]                           | true     |            |\n| volumeName       |             | string                          | false    |            |\n| storageClassName |             | string                          | false    |            |\n| resources        |             | [resources](#resources)         | false    |            |\n| dataSourceRef    |             | [dataSourceRef](#dataSourceRef) | false    |            |\n| dataSource       |             | [dataSource](#dataSource)       | false    |            |\n| selector         |             | [selector](#selector)           | false    |            |\n+------------------+-------------+---------------------------------+----------+------------+\n\n...\n\n## emptyDir\n+-----------+-------------+--------+----------+---------+\n|   NAME    | DESCRIPTION |  TYPE  | REQUIRED | DEFAULT |\n+-----------+-------------+--------+----------+---------+\n| name      |             | string | true     |         |\n| medium    |             | string | true     | empty   |\n| mountPath |             | string | true     |         |\n+-----------+-------------+--------+----------+---------+\n\n## secret\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n|    NAME     | DESCRIPTION |                          TYPE                          | REQUIRED | DEFAULT |\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n| name        |             | string                                                 | true     |         |\n| defaultMode |             | int                                                    | true     |     420 |\n| items       |             | [[]items](#items)                                      | false    |         |\n| mountPath   |             | string                                                 | true     |         |\n| mountToEnv  |             | [mountToEnv](#mountToEnv)                              | false    |         |\n| mountOnly   |             | bool                                                   | true     | false   |\n| data        |             | map[string](null|bool|string|bytes|{...}|[...]|number) | false    |         |\n| stringData  |             | map[string](null|bool|string|bytes|{...}|[...]|number) | false    |         |\n| readOnly    |             | bool                                                   | true     | false   |\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n\n...\n\n## configMap\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n|    NAME     | DESCRIPTION |                          TYPE                          | REQUIRED | DEFAULT |\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n| name        |             | string                                                 | true     |         |\n| defaultMode |             | int                                                    | true     |     420 |\n| items       |             | [[]items](#items)                                      | false    |         |\n| mountPath   |             | string                                                 | true     |         |\n| mountToEnv  |             | [mountToEnv](#mountToEnv)                              | false    |         |\n| mountOnly   |             | bool                                                   | true     | false   |\n| data        |             | map[string](null|bool|string|bytes|{...}|[...]|number) | false    |         |\n| readOnly    |             | bool                                                   | true     | false   |\n+-------------+-------------+--------------------------------------------------------+----------+---------+\n\n...\n\n")))}c.isMDXComponent=!0}}]);